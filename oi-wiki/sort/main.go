package main

func main() {
}

// 稳定排序：基数排序、计数排序、插入排序、冒泡排序、归并排序
// 非稳定排序：选择排序、堆排序、快速排序、希尔排序
// 1. 选择排序：选择最小的
// 2. 冒泡排序
// 假设数组的大小是 n + 1，冒泡排序从数组下标 1 开始
// void bubble_sort(int *a, int n) {
//  bool flag = true;
//  while (flag) {
//    flag = false;
//    for (int i = 1; i < n; ++i) {
//      if (a[i] > a[i + 1]) {
//        flag = true;
//        int t = a[i];
//        a[i] = a[i + 1];
//        a[i + 1] = t;
//      }
//    }
//  }
// }
// 我当然会觉得很不爽啊，我不知道你们怎么想的。
// 3. 插入排序 | 几乎有序的时候效率最高
// 4. 计数排序 ---> 记录数组中每个出现的数字的个数
// 5. 基数排序 | 非比较型排序算法 | 桶排序是非常重要的

// 桶排序就是分桶 + 快排(其他排序算法)，其实是重要的。
// 实际开发采用链表

// 6. 快速排序(分区交换排序) —— 分治的思想 2 步

// golang 的排序算法
